<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 生活、學習紀錄</title>
    <link>https://jyunyi-lin.github.io/tags/git/</link>
    <description>Recent content in Git on 生活、學習紀錄</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 16 Apr 2022 10:57:55 +0800</lastBuildDate>
    <atom:link href="https://jyunyi-lin.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>簡單的開發 Git Flow</title>
      <link>https://jyunyi-lin.github.io/posts/2022/04/%E7%B0%A1%E5%96%AE%E7%9A%84%E9%96%8B%E7%99%BC-git-flow/</link>
      <pubDate>Sat, 16 Apr 2022 10:57:55 +0800</pubDate>
      <guid>https://jyunyi-lin.github.io/posts/2022/04/%E7%B0%A1%E5%96%AE%E7%9A%84%E9%96%8B%E7%99%BC-git-flow/</guid>
      <description>簡單的開發 Git Flow 不知道有沒有人遇到過做好的 feature A、B、C 都依序上了測試機，PM 卻說只要把 feature C 先上正式機的情況，這時候如果你的開發分支沒有管理好的話，就會非常 🥺&#xA;只有兩條主線 一般來說專案都會有正式跟測試環境，比較常見會分由 master &amp;amp; demo 等等分支來做開發。&#xA;假設你的 feature 或 issue 分支都是從 demo 開出來的，做完後又直接 merge 回 demo，那就有極大的機會遇到上面的窘境。&#xA;轉換 Base Branch 當然，你可以直接從 master 開 feature 分支來解決這個問題。&#xA;或在比較大型的專案，也可以多一個分支 staging 來當作開 branch 的 base，另外跟 PM 爭取多開一個上正式機前的測試環境，方便我們或 PM 測試每次上版的內容。&#xA;Branch 通常可以由以下幾個主要的 branch 來做版本控管。&#xA;master / production：正式環境：正式發佈出去的版本。 staging / stage：上正式機前的測試環境：可以把它當作開分支的基底，基本上內容要跟 master 的內容保持一致。 demo / develop：測試環境：會包含最多的功能開發以及 bug 修復。 不同的專案，可能還會有 pre-prod 等等更多的分支&#xA;開發流程 1. 當 issue 被 assign 過來</description>
    </item>
  </channel>
</rss>
