<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React Server Components on 生活、學習紀錄</title>
    <link>https://jyunyi-lin.github.io/tags/react-server-components/</link>
    <description>Recent content in React Server Components on 生活、學習紀錄</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 23 Nov 2024 13:52:08 +0800</lastBuildDate>
    <atom:link href="https://jyunyi-lin.github.io/tags/react-server-components/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入探討 React Server Components：打造更高效的前端應用程式</title>
      <link>https://jyunyi-lin.github.io/posts/2024/11/%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%A8%8E-react-server-components%E6%89%93%E9%80%A0%E6%9B%B4%E9%AB%98%E6%95%88%E7%9A%84%E5%89%8D%E7%AB%AF%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</link>
      <pubDate>Sat, 23 Nov 2024 13:52:08 +0800</pubDate>
      <guid>https://jyunyi-lin.github.io/posts/2024/11/%E6%B7%B1%E5%85%A5%E6%8E%A2%E8%A8%8E-react-server-components%E6%89%93%E9%80%A0%E6%9B%B4%E9%AB%98%E6%95%88%E7%9A%84%E5%89%8D%E7%AB%AF%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</guid>
      <description>在前端開發的世界中，效能和用戶體驗是工程師永遠追求的核心目標。React Server Components（RSC）是一項由 React 團隊推出的技術，它結合了伺服器渲染與客戶端互動的優勢，旨在進一步優化應用程式的效能與開發體驗。&#xA;在這篇文章中，我將以資深前端工程師的視角，剖析 React Server Components 的核心概念、應用場景，以及它如何在現代 Web 開發中解決效能瓶頸的問題。&#xA;React Server Components 的核心概念 React Server Components 是 React 團隊於 2020 年提出的一項創新技術，主要目的是解決大型應用程式中資料傳輸和渲染效能的挑戰。與傳統的伺服器端渲染（Server-Side Rendering, SSR）不同，RSC 的最大特點是將部分 UI 的邏輯移到伺服器端進行處理，而非完全依賴客戶端或伺服器端。&#xA;三大核心特點 以伺服器為主的渲染： RSC 允許在伺服器端完成組件的渲染，這意味著伺服器可以直接處理重資料運算的邏輯，減少前端需要下載和處理的 JavaScript。&#xA;零 JavaScript 負擔： 客戶端不需要執行伺服器端組件的邏輯，這不僅減輕了瀏覽器的運算負擔，還能減少前端程式碼的大小。&#xA;靈活整合： React Server Components 與客戶端的互動組件（Client Components）無縫結合，允許我們依據不同的效能需求選擇適當的渲染策略。&#xA;React Server Components 的應用場景 在現代 Web 應用程式中，以下場景特別適合導入 React Server Components：&#xA;1. 資料密集型應用程式 例如數據分析儀表板或金融系統，伺服器端可以直接處理複雜的查詢和計算，並將結果以組件形式傳遞給客戶端。這樣可以減少瀏覽器的負擔，優化首次載入時間。&#xA;2. SEO 和首屏渲染效能 對於需要高效能 SEO 的網站，RSC 提供了接近靜態 HTML 的渲染結果，並保持 React 的靈活性，有助於提升搜尋引擎的爬取效率。&#xA;3. 資源受限的設備 在行動裝置或低性能設備上，RSC 可以將運算負擔轉移至伺服器，改善用戶體驗。</description>
    </item>
  </channel>
</rss>
